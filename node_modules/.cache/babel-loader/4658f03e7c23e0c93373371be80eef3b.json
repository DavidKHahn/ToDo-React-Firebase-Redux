{"ast":null,"code":"import _classCallCheck from \"/Users/dhjkmedia/Desktop/React-Tutorial-Apps/ToDo-React-Firebase-Redux/firebase-redux-todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dhjkmedia/Desktop/React-Tutorial-Apps/ToDo-React-Firebase-Redux/firebase-redux-todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dhjkmedia/Desktop/React-Tutorial-Apps/ToDo-React-Firebase-Redux/firebase-redux-todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dhjkmedia/Desktop/React-Tutorial-Apps/ToDo-React-Firebase-Redux/firebase-redux-todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dhjkmedia/Desktop/React-Tutorial-Apps/ToDo-React-Firebase-Redux/firebase-redux-todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dhjkmedia/Desktop/React-Tutorial-Apps/ToDo-React-Firebase-Redux/firebase-redux-todo/src/components/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport * as actions from '../actions';\nimport ListItem from './ListItem';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showForm: false,\n      formValue: \"\"\n    };\n\n    _this.inputChange = function (e) {\n      _this.setState({\n        formValue: e.target.value\n      });\n    };\n\n    _this.formSubmit = function (e) {\n      var formValue = _this.state.formValue;\n      var addTodo = _this.props.addTodo;\n      e.preventDefault();\n      addTodo({\n        title: formValue\n      });\n\n      _this.setState({\n        formValue: \"\"\n      });\n    };\n\n    _this.renderForm = function () {\n      var _this$state = _this.state,\n          showForm = _this$state.showForm,\n          formValue = _this$state.formValue;\n\n      if (showForm) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: _this.formSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"add\"), React.createElement(\"input\", {\n          value: formValue,\n          onChange: _this.inputChange,\n          id: \"toDoNext\",\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"toDoNext\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"What Next?\"))));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"renderToDo\",\n    value: function renderToDo() {\n      var data = this.props.data;\n\n      var toDos = _.map(data, function (value, key) {\n        return React.createElement(ListItem, {\n          key: key,\n          todoId: key,\n          todo: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      });\n\n      if (!_.isEmpty(toDos)) {\n        return toDos;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"You have no more things ToDo!\"));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchToDos();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var showForm = this.state.showForm;\n      return React.createElement(\"div\", {\n        className: \"to-do-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.renderForm(), this.renderToDo()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showForm: !showForm\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, showForm ? React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Close\") : React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Add\"))));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var data = _ref.data;\n  return {\n    data: data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(List);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/React-Tutorial-Apps/ToDo-React-Firebase-Redux/firebase-redux-todo/src/components/List.js"],"names":["React","Component","connect","_","actions","ListItem","List","state","showForm","formValue","inputChange","e","setState","target","value","formSubmit","addTodo","props","preventDefault","title","renderForm","data","toDos","map","key","isEmpty","fetchToDos","renderToDo","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport _ from 'lodash';\nimport * as actions from '../actions';\nimport ListItem from './ListItem';\n\nclass List extends Component {\n  state = {\n    showForm: false,\n    formValue: \"\"\n  };\n\n  inputChange = e => {\n    this.setState({formValue: e.target.value});\n  };\n\n  formSubmit = e => {\n    const {formValue} = this.state;\n    const {addTodo} = this.props;\n    e.preventDefault();\n    addTodo({title: formValue});\n    this.setState({formValue: \"\"});\n  };\n\n  renderForm = () => {\n    const {showForm, formValue} = this.state;\n    if (showForm) {\n      return (\n        <div>\n          <form onSubmit={this.formSubmit}>\n            <div>\n              <i>add</i>\n              <input \n                value={formValue}\n                onChange={this.inputChange}\n                id=\"toDoNext\"\n                type=\"text\"\n              />\n              <label htmlFor=\"toDoNext\">What Next?</label>\n            </div>\n          </form>\n        </div>\n      );\n    }\n  };\n  renderToDo() {\n    const {data} = this.props;\n    const toDos = _.map(data, (value, key) => {\n      return <ListItem key={key} todoId={key} todo={value} />;\n    });\n    if (!_.isEmpty(toDos)) {\n      return toDos;\n    }\n    return (\n      <div>\n        <h4>You have no more things ToDo!</h4>\n      </div>\n    );\n  }\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n  render() {\n    const {showForm} = this.state;\n    return (\n      <div className=\"to-do-list-container\">\n        <div className=\"row\">\n          {this.renderForm()}\n          {this.renderToDo()}\n        </div>\n        <div>\n          <button onClick={() => this.setState({showForm: !showForm})}>\n          {showForm ? (\n            <i>Close</i>\n          ) : (\n            <i>Add</i>\n          )}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({data}) => {\n  return {\n    data\n  }\n}\n\nexport default connect(mapStateToProps, actions)(List);"]},"metadata":{},"sourceType":"module"}